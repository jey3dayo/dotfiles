" j138 .vimperatorrc
" vim: set ft=vimperator:

" Options
set history=1000
set activate=homepage,quickmark,tabopen,paste
set complete=tsl
set ignorecase
set hlsearch

" set chars for hint mode
set hintchars=asdfghjklqwertuiovbn
set focuscontent
set popups=tab

let mapleader = ","

" gui options
set gui=addons,bookmarks,nomenu,tabs,navigation
set animations=true
set visualbell
colorscheme indigo

" Mappings
noremap j 5<C-e>
noremap k 5<C-y>
noremap J <PageDown>
noremap K <PageUp>
nnoremap h gT
nnoremap l gt
nnoremap D :bd!<CR>
nnoremap <C-h> :tabmove! -1<CR>
nnoremap <C-l> :tabmove! +1<CR>
nnoremap <C-a> ]]
nnoremap <C-x> [[

noremap U :undo<Space>
noremap a <S-a>

nnoremap <C-g> g<C-g>
noremap I <C-u>:ignorekeys add -except :,<\C-p>,<\C-n>,t,gt,gT,h,l,H,L<Space><Tab>

noremap <Leader>es :setlocal encoding=Shift_JIS<CR>
noremap <Leader>ec :setlocal encoding=EUC-JP<CR>
noremap <Leader>eu :setlocal encoding=UTF-8<CR>
noremap <Leader>ei :setlocal encodeing=ISO-2022-JP<CR>

" I'm Feeling Lucky
noremap <C-o> :open lu<Space>

" toggle load css
noremap ! :set invum<CR>

" insert mode
inoremap <C-b> <Left>
inoremap <C-f> <Right>

" toggle pin
noremap @ :set apptab!<CR>

" qmarks
qmark a http://animetick.net/
qmark t http://www.twitter.com/
qmark c http://www.google.com/calendar/render?pli=1
qmark f http://www.facebook.com/
qmark h http://b.hatena.ne.jp/J138/bookmarks
qmark i http://www.inoreader.com/folder/Must%20Read
qmark p http://getpocket.com/
qmark m https://inbox.google.com/
qmark n https://www.netflix.com/browse

" Firefox Config
set! browser.download.manager.retention=1
set! browser.download.manager.scanWhenDone=false
set! security.dialog_enable_delay=0
set! config.trim_on_minimize=true
set! dom.disable_window_move_resize=true
set! dom.event.contextmenu.enabled=false
set! xpinstall.signatures.required=false

" hatenabookmark for vimp
javascript if (typeof hBookmark != 'undefined') liberator.loadScript('chrome://hatenabookmark/content/vimperator/plugin/hatenabookmark.js', {__proto__: this});

" commandBookmarklet.js
nnoremap <Leader>P :bmlpocket<CR>

"copy.js {{{
nnoremap <Leader>y :copy<Space>Title bittly<CR>
nnoremap <Leader>Y :copy<Space>title URL<CR>
nnoremap <Leader>a :copy<Space>Amazon<CR>
nnoremap <Leader>A :copy<Space>AmazonAffiliate<CR>

javascript <<EOM
    liberator.globalVariables.copy_templates = [
    { label: 'title URL',       value: '%TITLE% %URL%' },
    { label: 'anchor',          value: '<a href="%URL%">%TITLE%</a>' },
    { label: 'title<cr>URL',    value: '%TITLE%\n%URL%' },
    { label: 'markdown',        value: '[%TITLE%](%URL% "%TITLE%")' },
    { label: 'Title bittly',    value: 'Get bittly URL', custom: function() { return buffer.title + ' ' + util.httpGet('https://api-ssl.bitly.com/v3/shorten?access_token=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&format=json&longUrl=' + encodeURIComponent(buffer.URL)).responseText; }},
    { label: 'ASIN',            value: 'ASIN code from amazon', custom: function(){return content.document.getElementById('ASIN').value;} },
    { label: 'Amazon',          value: 'simple amazon url', custom: function(){return 'http://amazon.co.jp/o/ASIN/' + content.document.getElementById('ASIN').value;} },
    { label: 'AmazonAffiliate', value: 'simple amazon url with affiliate', custom: function(){return 'http://amazon.co.jp/o/ASIN/' + content.document.getElementById('ASIN').value + '/mt03-22';} },
    ];
EOM
" }}}

" feedSomeKeys_3.js
command! -nargs=+ lazy autocmd VimperatorEnter .* <args>
lazy fmaps -u='mail\.google\.com/mail' c / j k y n p o u e x s r <S-i>  a # [ ] ? gi gs gt gd ga gc
lazy fmaps -u='mail\.google\.com/mail/.*/[0-9a-f]+$' c / j,n k,p n,j p,k y o u e x s r a # [ ] ? gi gs gt gd ga gc
lazy fmaps -u='feedly\.com' j k n p o v gm ga gg gl / ? r m x s t l f b
lazy fmaps -e=vkeydown -u='www\.tumblr\.com/' j k r t q p n L l<CR>
lazy fmaps -u='www\.pixiv\.net/member_illust\.php\?mode=manga&illust_id=[0-9]+' j k

" hints-for-embedded.js
let g:hints_for_embedded_mode="e"

" plugin_loader.js {{{
javascript <<EOM
liberator.globalVariables.plugin_loader_roots = "~/src/github.com/vimpr/vimperator-plugins/"
liberator.globalVariables.plugin_loader_plugins = `
_libly
_smooziee
auto_detect_link
bitly
commandBookmarklet
copy
feedSomeKeys_3
hints-for-embedded
multi_requester
prevent-pseudo-domain
proxy
sbmcommentsviewer
stella
slideshare
walk-input
`.split(/\s+/).filter(function(n) !/^!/.test(n));
EOM
" }}}

" proxy.js {{{
javascript <<EOM
liberator.globalVariables.proxy_settings = [
{
conf_name: 'disable',
               conf_usage: 'direct connection',
               settings: [
               {
                    label: 'type',
                           param: 0
               }
           ]
        },
        {
            conf_name: 'localhost:8080',
            conf_usage: 'localhost:8080',
            settings: [
                {
                    label: 'type',
                    param: 1
                },
                {
                    label: 'http',
                    param: 'localhost'
                },
                {
                    label: 'http_port',
                    param: 8080
                }
            ]
        },
        {
            conf_name: 'dolipo',
            conf_usage: 'dolipo',
            settings: [
                {
                    label: 'type',
                    param: 1
                },
                {
                    label: 'http',
                    param: 'localhost'
                },
                {
                    label: 'http_port',
                    param: 8123
                }
            ]
        }
];
EOM
" }}}

" sbmcommentsviewer.js
let g:sbm_comments_viewer_filter_nocomments="true"
noremap v :viewSBMComments -t h<CR>

" slideshare.js
nnoremap -urls=slideshare\\.net j :slideshare next<CR>
nnoremap -urls=slideshare\\.net k :slideshare prev<CR>

" speakerdeck.js
nnoremap -urls=speakerdeck\\.com j :speakerdeck next<CR>
nnoremap -urls=speakerdeck\\.com k :speakerdeck prev<CR>

" multi_requester.js
noremap <Leader>d :mr alc<Space>
noremap <Leader>D :mr goo<Space>

" nextlink.js
set nextpattern=^次(へ|の|ペ)?,^続き,ＮＥＸＴ,古い,(next|more),^(>>*|»)
set previouspattern=^前(へ|の|ペ)?,^戻る,ＢＡＣＫ,新しい,(prev|previous),^(<<*|«)
let g:nextlink_nositeinfo_act = "f"

" stella.js
javascript <<EOM
liberator.globalVariables.stella_nico_use_comment=true
function addLocalMappings(buffer, maps) {
  maps.forEach(
    function (map) {
      let [cmd, action, extra] = map;
      let actionFunc = action;
      extra || (extra = {});

      if (typeof action == "string") {
        if (action.charAt(0) == ':')
          actionFunc = extra.open ? function () commandline.open("", action, modes.EX)
                                  : function () liberator.execute(action);
        else
          actionFunc = function () events.feedkeys(action, extra.noremap, true);
      }
      extra.matchingUrls = buffer;
      mappings.addUserMap(
        [modes.NORMAL],
        [cmd],
        "Local mapping for " + buffer,
        actionFunc,
        extra
      );
    }
  );
}

addLocalMappings(
  /^(http:\/\/(es|www).nicovideo.jp\/(watch|playlist\/mylist)|(http|https):\/\/(jp|www)\.youtube\.com\/watch|http:\/\/(www\.)?vimeo\.com\/(channels\/(hd)?#)?\d+)/,
  [
    ['<C-g>', ':pageinfo m',      ],
    ['p',     ':stplay',          ],
    ['m',     ':stmute',          ],
    ['c',     ':stcomment',       ],
    ['zz',    ':stlarge',         ],
    ['s',     ':stseek! 15',      ],
    ['S',     ':stseek! -15',     ],
    ['v',     ':stvolume! 10',    ],
    ['V',     ':stvolume! -10',   ],
    ['e',     ':strelations ',    {open: true}],
    ['E',     ':strelations! ',   {open: true}],
  ]
);
EOM

javascript <<EOM
if (liberator.has("Win32")) {
  confpath = '~/_vimperatorrc';
  confpath_mine = '~/_vemperatorrc.mine';
} else {
  confpath = '~/.vimperatorrc';
  confpath_mine = '~/.vimperatorrc.mine';
}

liberator.execute('noremap <Leader>so :source ' + confpath + '<CR>');
io.source(confpath_mine);
EOM

echo "done."

" vim: ts=2 sw=2 sts=2 fdm=marker ft=vimperator
