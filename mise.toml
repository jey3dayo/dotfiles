[tools]
biome = "1.9.4"
go = "1.23.3"
node = "lts"
prettier = "3.4.2"
stylua = "0.20.0"
shfmt = "3.10.0"
luajit = "latest"

[settings]
env_file = '.env'
experimental = true
vfox = false
idiomatic_version_file_enable_tools = ["go"]
trusted_config_paths = ['/Users/t00114/src/github.com']

[env]
_.source = [".venv/bin/activate"]

[tasks.format]
description = "Format all files"
run = [
  "biome format --write .",
  'find . -name "*.md" | grep -v node_modules | grep -v tmux/plugins | grep -v fisher | grep -v zsh/.zinit | xargs -r prettier --write',
  'find . -name "*.yml" -o -name "*.yaml" | grep -v node_modules | grep -v tmux/plugins | grep -v fisher | grep -v zsh/.zinit | grep -v .rubocop.yml | grep -v helm/ | xargs -r prettier --write',
  "stylua .",
  "find . -name '*.sh' ! -path './node_modules/*' ! -path './tmux/plugins/*' ! -path './fisher/*' ! -path './claude/local/node_modules/*' ! -path './zsh/.zinit/*' | xargs -r shfmt -w",
]

[tasks.lint]
description = "Check all formatting and linting (GitHub Actions compatible)"
run = [
  "biome check --formatter-enabled=true --linter-enabled=true .",
  'find . -name "*.md" | grep -v node_modules | grep -v tmux/plugins | grep -v fisher | grep -v zsh/.zinit | xargs -r prettier --check',
  'find . -name "*.yml" -o -name "*.yaml" | grep -v node_modules | grep -v tmux/plugins | grep -v fisher | grep -v zsh/.zinit | grep -v .rubocop.yml | grep -v helm/ | xargs -r prettier --check',
  "stylua --check .",
  "find . -name '*.sh' ! -path './node_modules/*' ! -path './tmux/plugins/*' ! -path './fisher/*' ! -path './claude/local/node_modules/*' ! -path './zsh/.zinit/*' | xargs -r shfmt -d",
  "luacheck . || [ $? -eq 1 ]",
]

[tasks.update]
description = "Update all dependencies"
run = ["mise run update:submodules", "mise run update:brew"]

[tasks."update:submodules"]
description = "Update git submodules to latest (discards local changes)"
run = "git submodule foreach 'git reset --hard HEAD && git clean -fd' && git submodule update --remote"

[tasks."update:brew"]
description = "Update Homebrew packages"
run = "brew update && brew upgrade"

[tasks.ci]
description = "Run all CI checks locally (same as GitHub Actions)"
run = [
  "mise run lint",
]

[tasks."ci:install"]
description = "Install additional tools required for CI"
run = ["luarocks install --local luacheck"]

